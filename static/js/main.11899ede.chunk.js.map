{"version":3,"sources":["components/header/index.js","components/aboutUs/index.js","components/countryFlag/index.js","components/mapResult/index.js","components/map/index.js","components/footer/index.js","containers/application.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","AboutUs","className","Grid","container","direction","justify","item","lg","Box","flexDirection","Component","countryFlag","countryCode","this","props","country","svg","React","MapResult","information","confirmed","deadths","recovered","Map","state","selectedCountries","actualCountry","covidInformation","requestOn","toggleCountry","setState","id","axios","get","then","res","console","log","data","value","deaths","catch","err","dataInformation","pendingRequest","mapCountries","map","key","d","style","fill","cursor","stroke","onClick","Fragment","xmlns","viewBox","CircularProgress","Footer","href","target","Application","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.11899ede.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Material-UI\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport PeopleIcon from '@material-ui/icons/People';\nimport \"./style.css\";\n\nclass AboutUs extends Component {\n    render() {\n        return  (\n            <div className=\"about-us-section\"> \n                <div className=\"about-us-title\">\n                    <h2 className=\"title\">Acerca de Covid19APP</h2>\n                    <p  className=\"subtitle\">No pertenecemos a ninguna organizacion, nuestro objetivo es ayudar a las personas a mantenerse informadas del actual Sars-Covid19</p>\n                </div>\n                <div className=\"information-items-container\">\n                    <Grid container direction=\"row\" justify=\"center\" spacing={3}>\n                        <Grid item lg={4}>\n                            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                                <PeopleIcon className=\"icon\"/>\n                                <h2 className=\"title\">Uso Publico</h2>\n                                <p className=\"subtitle\">Nuestra aplicacion esta planeada para ser usada por todas las personas que lo deseen, de forma gratis</p>\n                            </Box>\n                        </Grid>\n                        <Grid item lg={4}>\n                            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                                <InfoIcon className=\"icon\"/>\n                                <h2 className=\"title\">Datos(API REST)</h2>\n                                <p className=\"subtitle\">Toda nuestra informacion pertenece a la API gratuita https://github.com/mathdroid/covid-19-api</p>\n                            </Box>\n                        </Grid>\n                    \n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AboutUs;","import React from \"react\"\nimport ReactCountryFlag from \"react-country-flag\"\n \nclass countryFlag extends React.Component {\n    render() {\n        return (\n            <ReactCountryFlag countryCode={this.props.country} svg className=\"country-flag\"/>            \n        )\n    }\n}\n \nexport default countryFlag","import React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport HotelIcon from '@material-ui/icons/Hotel';\nimport CountryFlag from \"../countryFlag/index\"\n\nclass MapResult extends Component {\n    render() {\n        return(\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n                <CountryFlag country={this.props.country} className=\"country-flag\"/>\n                <div className=\"data-information-item\">\n                    <p className=\"title-data-information confirmed-color\">Confirmed Cases</p>\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className=\"data-confirmed\">\n                        <HotelIcon className=\"icon\" />\n                        <p className=\"value\">{this.props.information.confirmed}</p>\n                    </Box>\n                </div>\n                <div className=\"data-information-item\">\n                    <p className=\"title-data-information deadths-color\">Deadths</p>\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className=\"data-deaths\">\n                        <SentimentVeryDissatisfiedIcon className=\"icon\" />\n                        <p className=\"value\">{this.props.information.deadths}</p>\n                    </Box>\n                </div>\n                <div className=\"data-information-item\">\n                    <p className=\"title-data-information recovery-color\">Recovery</p>\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className=\"data-recovery\">\n                        <InsertEmoticonIcon className=\"icon\" />\n                        <p className=\"value\">{this.props.information.recovered}</p>\n                    </Box>\n                </div>\n            </Box>\n        );\n    }\n}\n\nexport default MapResult;","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport country from \"world-map-country-shapes\";\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Grid from '@material-ui/core/Grid';\nimport MapResult from \"../mapResult/index\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport \"./styles.css\"\nclass Map extends Component {\n    state = {\n        selectedCountries: {},\n        actualCountry: \"\",\n        covidInformation: {},\n        requestOn: true,\n        \n    };\n    componentDidMount() {\n        this.setState({\n            selectedCountries: {\n                \"VE\": true\n            },\n            actualCountry: \"VE\"\n        })\n        axios.get(\"https://covid19.mathdro.id/api/countries/VE\").then(res => {\n            console.log(res)\n            this.setState({\n                covidInformation: {\n                    confirmed: res.data.confirmed.value,\n                    deadths: res.data.deaths.value,\n                    recovered: res.data.recovered.value,\n                },\n                requestOn: false,\n            });\n        }).catch(err => {\n            // what now?\n            console.log(err);\n        })\n        \n    }\n    toggleCountry = country => {\n        const { selectedCountries } = this.state;\n        this.setState({\n            selectedCountries: {\n                [country.id]: !selectedCountries[country.id]\n            },\n            actualCountry: country.id,\n            requestOn: true\n        });\n        axios.get(\"https://covid19.mathdro.id/api/countries/\"+country.id).then(res => {\n            console.log(res)\n            this.setState({\n                covidInformation: {\n                    confirmed: res.data.confirmed.value,\n                    deadths: res.data.deaths.value,\n                    recovered: res.data.recovered.value,\n                },\n                requestOn: false,\n            });\n        })\n    };\n  \n  render() {\n    const { selectedCountries } = this.state;\n    let actualCountry = this.state.actualCountry\n    let dataInformation = this.state.covidInformation\n    let pendingRequest = this.state.requestOn\n    console.log( pendingRequest)\n    const mapCountries = country.map(country => (\n      <path\n        key={country.id}\n        d={country.shape}\n        style={{\n          fill: this.state.selectedCountries[country.id] ? \"tomato\" : \"#eee\",\n          cursor: \"pointer\",\n          stroke: \"#000\"\n        }}\n        onClick={() => this.toggleCountry(country)}\n      />\n    ));\n    return (\n        <React.Fragment>\n            <Grid container direction=\"row\" justify=\"center\" spacing={3}>\n                <Grid item lg={10}>\n                    <div className=\"title-container\">\n                        <LocalHospitalIcon className=\"icon\" />\n                        <h1 className=\"title\">Covid19 Consulta por Pais</h1>\n                        <p className=\"subtitle\">Haz click en un pais para obtener informacion acerca de su situacion con el Covid19</p>\n                    </div>\n                    <Grid container direction=\"row\" justify=\"center\" spacing={3}>\n                        <Grid item lg={8} className=\"map-container\">\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                height=\"600px\"\n                                width=\"100%\"\n                                viewBox=\"0 0 2000 1001\"\n                            >\n                                {mapCountries}\n                            </svg>\n                        </Grid>\n                        <Grid item lg={4} className=\"data-information\">\n                            {pendingRequest ? <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\" className=\"preloader-cont\"><CircularProgress /></Box> : <MapResult country={actualCountry} information={dataInformation}/>}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n  }\n}\n \nexport default Map;","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Footer extends Component {\n    render() {\n        return  (\n            <footer>\n                <p className=\"title\">Construido por <a href=\"https://github.com/HenryGlo\" target=\"_blank\">Henry Gomez Lofiego</a></p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport Header from '../components/header/index'\nimport AboutUs from \"../components/aboutUs/index\"\nimport MapChart from \"../components/map/index\";\nimport Footer from \"../components/footer/index\";\n\nfunction Application() {\n    return (\n        <React.Fragment>\n            <MapChart />\n            <AboutUs />\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default Application;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Application from \"./containers/application\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <Application />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}